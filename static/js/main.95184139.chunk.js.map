{"version":3,"sources":["Form/styled.js","Form/index.js","Tasks/styled.js","Tasks/index.js","Buttons/styled.js","Buttons/index.js","Section/styled.js","Section/index.js","Header/index.js","Container/styled.js","Container/index.js","useTasks.js","App.js","index.js"],"names":["StyledForm","styled","form","Input","input","Button","button","Form","addNewTask","inputRef","useRef","useState","newTaskContent","setNewTaskContent","onSubmit","event","preventDefault","trim","ref","value","placeholder","onChange","target","onClick","current","focus","TasksList","ul","Item","li","hidden","css","Content","span","done","toogleDone","remove","Tasks","tasks","hideDone","removeTask","toogleTaskDone","map","id","content","key","Container","div","Buttons","toogleHideDone","setAlldone","length","disabled","every","StyledSection","section","Header","Title","Body","Section","title","body","extraHeaderContent","StyledContainer","main","children","getInitialTasks","tasksFromLocaleStorage","localStorage","getItem","JSON","parse","useTasks","setTasks","useEffect","setItem","stringify","filter","task","App","setHideDone","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.95184139.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const StyledForm = styled.form`\n  display: grid;\n  grid-template-columns: 1fr auto;\n  grid-gap: 20px;\n\n  @media (max-width: 767px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nexport const Input = styled.input`\n  padding: 10px;\n  border: 1px solid #ddd;\n`;\nexport const Button = styled.button`\n  padding: 10px;\n  background-color: hsl(180, 100%, 25%);\n  color: white;\n  border: none;\n  transition: background 0.5s, transform 0.5s;\n\n  &:hover {\n    background-color: hsl(180, 100%, 30%);\n    transform: scale(1.03);\n  }\n  &:active {\n    background-color: hsl(180, 100%, 35%);\n  }\n`;\n","import React, { useState, useRef } from \"react\";\nimport { StyledForm, Input, Button } from \"./styled\";\n\nconst Form = ({ addNewTask }) => {\n  const inputRef = useRef(null);\n  const [newTaskContent, setNewTaskContent] = useState(\"\");\n\n  const focusInput = () => {\n    inputRef.current.focus();\n  };\n\n  const onFormSubmit = (event) => {\n    event.preventDefault();\n    if (newTaskContent.trim() !== \"\") {\n      addNewTask(newTaskContent.trim());\n      setNewTaskContent(\"\");\n    }\n  };\n\n  return (\n    <StyledForm onSubmit={onFormSubmit}>\n      <Input\n        ref={inputRef}\n        value={newTaskContent}\n        placeholder=\"Co jest do zrobienia?\"\n        onChange={({ target }) => setNewTaskContent(target.value)}\n      />\n      <Button onClick={focusInput}>Dodaj zadanie</Button>\n    </StyledForm>\n  );\n};\n\nexport default Form;\n","import styled, { css } from \"styled-components\";\n\nexport const TasksList = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n`;\n\nexport const Item = styled.li`\n  display: grid;\n  grid-template-columns: auto 1fr auto;\n  grid-gap: 10px;\n  align-items: center;\n  padding: 10px;\n  border-bottom: 1px solid #ddd;\n\n  ${({ hidden }) =>\n    hidden &&\n    css`\n      display: none;\n    `}\n`;\n\nexport const Content = styled.span`\n  ${({ done }) =>\n    done &&\n    css`\n      text-decoration: line-through;\n    `}\n`;\n\nexport const Button = styled.button`\n  border: none;\n  color: white;\n  width: 30px;\n  height: 30px;\n  padding: 0;\n  transition: background 1s;\n\n  ${({ toogleDone }) =>\n    toogleDone &&\n    css`\n      background-color: hsl(120, 61%, 34%);\n\n      &:hover {\n        background-color: hsl(120, 61%, 70%);\n      }\n    `}\n\n  ${({ remove }) =>\n    remove &&\n    css`\n      background-color: hsl(348, 83%, 47%);\n\n      &:hover {\n        background-color: hsl(348, 83%, 70%);\n      }\n    `}\n`;\n","import React from \"react\";\nimport { TasksList, Item, Content, Button } from \"./styled\";\n\nconst Tasks = ({ tasks, hideDone, removeTask, toogleTaskDone }) => {\n  return (\n    <TasksList>\n      {tasks.map(({ id, content, done }) => (\n        <Item key={id} hidden={done && hideDone}>\n          <Button toogleDone onClick={() => toogleTaskDone(id)}>\n            {done ? \"âœ”\" : \"\"}\n          </Button>\n          <Content done={done}>{content}</Content>\n          <Button remove onClick={() => removeTask(id)}>\n            ðŸ—‘\n          </Button>\n        </Item>\n      ))}\n    </TasksList>\n  );\n};\n\nexport default Tasks;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nexport const Button = styled.button`\n  background-color: transparent;\n  color: teal;\n  border: none;\n  margin: 0 0 0 20px;\n  transition: color 0.3s;\n\n  @media (max-width: 767px) {\n    flex-basis: 100%;\n    margin: 10px;\n  }\n\n  &:hover {\n    color: hsl(180, 100%, 35%);\n  }\n\n  &:disabled {\n    color: #ccc;\n  }\n`;\n","import React from \"react\";\nimport { Button, Container } from \"./styled\";\n\nconst Buttons = ({ tasks, hideDone, toogleHideDone, setAlldone }) => (\n  <Container>\n    {tasks.length > 0 && (\n      <>\n        <Button onClick={toogleHideDone}>\n          {hideDone ? \"PokaÅ¼\" : \"Ukryj\"} ukoÅ„czone\n        </Button>\n        <Button onClick={setAlldone} disabled={tasks.every(({ done }) => done)}>\n          UkoÅ„cz wszystkie\n        </Button>\n      </>\n    )}\n  </Container>\n);\n\nexport default Buttons;\n","import styled from \"styled-components\";\n\nexport const StyledSection = styled.section`\n  margin: 10px 0;\n  background: white;\n  box-shadow: 0 0 5px #ddd;\n`;\n\nexport const Header = styled.div`\n  border-bottom: 1px solid #ddd;\n  display: grid;\n  grid-template-columns: auto auto;\n  grid-gap: 20px;\n  justify-content: space-between;\n  align-items: center;\n  padding: 20px;\n\n  @media (max-width: 767px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nexport const Title = styled.div`\n  font-size: 20px;\n  margin: 0;\n`;\n\nexport const Body = styled.div`\n  padding: 20px;\n`;\n","import React from \"react\";\nimport { Header, StyledSection, Title, Body } from \"./styled\";\n\nconst Section = ({ title, body, extraHeaderContent }) => (\n  <StyledSection>\n    <Header>\n      <Title>{title}</Title>\n      {extraHeaderContent}\n    </Header>\n    <Body>{body}</Body>\n  </StyledSection>\n);\n\nexport default Section;\n","import React from \"react\";\n\nconst Header = ({ title }) => (\n  <header>\n    <h1>{title}</h1>\n  </header>\n);\n\nexport default Header;\n","import styled from \"styled-components\";\n\nexport const StyledContainer = styled.main`\n  max-width: 900px;\n  margin: 0 auto;\n  padding: 20px;\n`;\n","import React from \"react\";\nimport { StyledContainer } from \"./styled\";\n\nconst Container = ({ children }) => (\n  <StyledContainer>{children}</StyledContainer>\n);\n\nexport default Container;\n","import { useState, useEffect } from \"react\";\n\nconst getInitialTasks = () => {\n  const tasksFromLocaleStorage = localStorage.getItem(\"tasks\");\n\n  return tasksFromLocaleStorage ? JSON.parse(tasksFromLocaleStorage) : [];\n};\n\nconst useTasks = () => {\n  const [tasks, setTasks] = useState(getInitialTasks);\n\n  useEffect(() => {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  }, [tasks]);\n\n  const removeTask = (id) => {\n    setTasks((tasks) => tasks.filter((task) => task.id !== id));\n  };\n\n  const toogleTaskDone = (id) => {\n    setTasks((tasks) =>\n      tasks.map((task) => {\n        if (task.id === id) {\n          return { ...task, done: !task.done };\n        }\n        return task;\n      })\n    );\n  };\n\n  const setAlldone = () => {\n    setTasks((tasks) =>\n      tasks.map((task) => ({\n        ...task,\n        done: true,\n      }))\n    );\n  };\n\n  const addNewTask = (content) => {\n    setTasks((tasks) => [\n      ...tasks,\n      {\n        content,\n        done: false,\n        id: tasks.length ? tasks[tasks.length - 1].id + 1 : 1,\n      },\n    ]);\n  };\n\n  return {\n    tasks,\n    removeTask,\n    toogleTaskDone,\n    setAlldone,\n    addNewTask,\n  };\n};\n\nexport default useTasks;\n","import React, { useState } from \"react\";\nimport Form from \"./Form\";\nimport Tasks from \"./Tasks\";\nimport Buttons from \"./Buttons\";\nimport Section from \"./Section\";\nimport Header from \"./Header\";\nimport Container from \"./Container\";\nimport useTasks from \"./useTasks\";\n\nfunction App() {\n  const [hideDone, setHideDone] = useState(false);\n\n  const toogleHideDone = () => {\n    setHideDone((hideDone) => !hideDone);\n  };\n\n  const {\n    tasks,\n    removeTask,\n    toogleTaskDone,\n    setAlldone,\n    addNewTask,\n  } = useTasks();\n\n  return (\n    <Container>\n      <Header title=\"Lista zadaÅ„\" />\n      <Section\n        title=\"Dodaj nowe zadanie\"\n        body={<Form addNewTask={addNewTask} />}\n      />\n      <Section\n        title=\"Lista zadaÅ„\"\n        body={\n          <Tasks\n            tasks={tasks}\n            hideDone={hideDone}\n            removeTask={removeTask}\n            toogleTaskDone={toogleTaskDone}\n          />\n        }\n        extraHeaderContent={\n          <Buttons\n            tasks={tasks}\n            hideDone={hideDone}\n            toogleHideDone={toogleHideDone}\n            setAlldone={setAlldone}\n          />\n        }\n      />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}